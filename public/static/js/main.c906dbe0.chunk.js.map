{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/eventsCalendar.js","actions/auth.js","customHooks/useForm.js","components/authentication/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendarLanguage.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.jsx","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","ruta","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","console","log","map","e","end","moment","toDate","start","addNewEventToCalendar","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","calendarFormValues","setCalendarFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c906dbe0.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (ruta, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${ruta}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url)\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (ruta, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${ruta}`;\r\n\r\n    // leer del local storage el token\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Event Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    addNewEvent: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    // authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    console.log(events);\r\n\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n// asincrona\r\nexport const eventStartAddNew = (event) => {\r\n                          // permite obtener losdatos de redux\r\n  return async (dispatch, getState) => {\r\n\r\n    console.log(getState);\r\n    const {uid, name} = getState().auth;\r\n\r\n    try {\r\n      const resp = await fetchConToken('events', event, 'POST');\r\n      const body = await resp.json();\r\n      \r\n      if(body.ok){\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name\r\n        }\r\n        dispatch(addNewEventToCalendar(event))\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst addNewEventToCalendar = (event) => ({\r\n  type: types.addNewEvent,\r\n  payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent})\r\n\r\n\r\n\r\n// tarea asincrona\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await resp.json();\r\n\r\n      if(body.ok){\r\n        dispatch(eventUpdated(event));\r\n      }else{\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n      // const events = prepareEvents(body.events)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n})\r\n\r\n\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const {id} = getState().calendar.activeEvent\r\n\r\n    try {\r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await resp.json();\r\n\r\n      if(body.ok){\r\n        dispatch(eventDeleted());\r\n      }else{\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n      // const events = prepareEvents(body.events)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n  type: types.eventDeleted\r\n})\r\n\r\n\r\n\r\n// tarea asincrona que obtiene los eventos de la BD que dispara una accion al reducer\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n\r\n      const resp = await fetchConToken('events');\r\n      const body = await resp.json();\r\n      const events = prepareEvents(body.events)\r\n\r\n      dispatch(eventLoaded(events))\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events\r\n})\r\n\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./eventsCalendar\";\r\n\r\n// tarea asincrona\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            // graba la fecha, hora, min y seg en que se creo el token\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\n// tarea asincrona\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            // graba la fecha, hora, min y seg en que se creo el token\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n//acion sincrona\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n// tarea asincrona\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            // graba la fecha, hora, min y seg en que se creo el token\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            // Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({type:types.authLogout})\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../customHooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        loginEmail: '',\r\n        loginPassword: ''\r\n    });\r\n\r\n    const {loginEmail, loginPassword} = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        registerName: '',\r\n        registerEmail: '',\r\n        registerPassword1: '',\r\n        registerPassword2: ''\r\n    });\r\n    \r\n    const {registerName, registerEmail, registerPassword1, registerPassword2} = formRegisterValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        //console.log(formLoginValues);\r\n        dispatch(startLogin(loginEmail, loginPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // si password1 es DIFERENTE de password2\r\n        if(registerPassword1 !== registerPassword2) return Swal.fire('Error', 'Passwords must be the same', 'error')\r\n        dispatch(startRegister(registerEmail, registerPassword1, registerName))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='loginEmail'\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='loginPassword'\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"registerPassword1\"\r\n                                value={registerPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginScreen;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogut = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick = {handleLogut}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Exit</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","\r\nexport const messages = {\r\n    allDay: 'All day',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Today',\r\n    month: 'Month',\r\n    week: 'Week',\r\n    day: 'Day',\r\n    agenda: 'Agenda',\r\n    date: 'Date',\r\n    time: 'TIme',\r\n    event: 'Event',\r\n    noEventsInRange: 'There are no events in this range',\r\n    showMore: total => `+ See more (${total})`\r\n};","import React from 'react';\r\n\r\nconst CalendarEvent = ({event}) => {    \r\n    const{title, user} = event\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>- {user.name}</strong>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarEvent;","import { types } from \"../types/types\"\r\n\r\n\r\n// --------------------------------------------------------------------------------------------------------------------------------------------\r\n                                                    //*Actions to open modal\r\n// --------------------------------------------------------------------------------------------------------------------------------------------\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","// packages\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Modal from \"react-modal\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// scripts\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from \"../../actions/eventsCalendar\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst nowPlusOneHour = now.clone().add(1, \"hours\");\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOneHour.toDate()\r\n\r\n}\r\n\r\nconst CalendarModal = () => {\r\n  const { modalOpen } = useSelector((state) => state.ui); //ui esta en el root reducer, es el objeto\r\n  const { activeEvent } = useSelector((state) => state.calendar); //ui esta en el root reducer, es el objeto\r\n  const dispatch = useDispatch();\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const [calendarFormValues, setCalendarFormValues] = useState(initEvent);\r\n  const { title, notes, start, end } = calendarFormValues;\r\n\r\n  useEffect(() => {\r\n    if(activeEvent){\r\n      setCalendarFormValues(activeEvent)\r\n    }\r\n    else{\r\n      setCalendarFormValues(initEvent)\r\n    }\r\n  }, [activeEvent, setCalendarFormValues])\r\n\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setCalendarFormValues({\r\n      ...calendarFormValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent())\r\n    setCalendarFormValues(initEvent)\r\n  };\r\n\r\n  const handleStartDate = (e) => {\r\n    setDateStart(e);\r\n    setCalendarFormValues({\r\n      ...calendarFormValues,\r\n      start: e,\r\n    });\r\n  };\r\n\r\n  const handleEndtDate = (e) => {\r\n    setDateEnd(e);\r\n    setCalendarFormValues({\r\n      ...calendarFormValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    // si la fecha de inicio es igual o mayor a la fecha final\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"End date must be higher that Start date\",\r\n        \"error\"\r\n      );\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n    \r\n    if(activeEvent){\r\n      dispatch(eventStartUpdate(calendarFormValues))\r\n    }else{\r\n      dispatch(eventStartAddNew(calendarFormValues));\r\n    }\r\n  \r\n\r\n    setTitleValid(true);\r\n\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1>{activeEvent ? 'Edit Event' : 'New Event'} </h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Date and Start Time</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDate}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Date and Finish Time</label>\r\n          <DateTimePicker\r\n            onChange={handleEndtDate}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Title and Notes</label>\r\n          <input\r\n            type=\"text\" //si no es true\r\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n            placeholder=\"Title Event\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            A short description\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notes\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Additional information\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Save</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nconst AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleClickNewEvent = () => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleClickNewEvent}>\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddNewFab;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/eventsCalendar';\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n      dispatch(eventStartDelete())\r\n    }\r\n\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete Event</span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DeleteEventFab;","import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport Navbar from \"../ui/Navbar\";\r\nimport { messages } from \"../../helpers/calendarLanguage\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport CalendarEvent from \"./CalendarEvent\";\r\nimport CalendarModal from \"./CalendarModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from \"../../actions/eventsCalendar\";\r\nimport AddNewFab from \"../ui/AddNewFab\";\r\nimport DeleteEventFab from \"../ui/DeleteEventFab\";\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nconst CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n  const {uid} = useSelector(state => state.auth)\r\n\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem(\"lastView\") || \"month\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading()) // --> el argumento necesario es el token\r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = () => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e))\r\n  };\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem(\"lastView\", e);\r\n  };\r\n\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActiveEvent())\r\n  }\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id) ? \"#367cf7\" : '#465660',\r\n      borderRadius: \"0px\",\r\n      opacity: 0.8,\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        view={lastView}\r\n        components={{ event: CalendarEvent }}\r\n      />\r\n      <AddNewFab />\r\n      {\r\n        (activeEvent) && <DeleteEventFab />\r\n      }\r\n      <CalendarModal />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarScreen;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport LoginScreen from \"../components/authentication/LoginScreen\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {checking, uid} = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n  }, [dispatch])\r\n\r\n\r\n  if(checking){\r\n    return (<h5>Loading...</h5>)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n            <PublicRoute \r\n              exact \r\n              path='/login' \r\n              component={LoginScreen} \r\n              // los signos de admiracion pasan un string a valor booleano\r\n              isAuthenticated={!!uid}\r\n            />\r\n            <PrivateRoute \r\n              exact \r\n              path='/' \r\n              component={CalendarScreen} \r\n              isAuthenticated={!!uid}\r\n            />\r\n            \r\n            {/* this line redirect to calendarScreen if the route does not exist */}\r\n            <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {  \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//   id: new Date().getTime(),\r\n//   title: \"cumple carlos\",\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, \"hours\").toDate(),\r\n//   notes: \"comprar helado\",\r\n//   user: {\r\n//     _id: \"123\",\r\n//     name: \"Hermes Tello\",\r\n//   },\r\n// },\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n  //console.log(action);\r\n\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n\r\n    case types.addNewEvent:\r\n      console.log(action);\r\n      return{\r\n        ...state,\r\n        events:[\r\n          ...state.events,\r\n          action.payload\r\n        ]\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return{\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventUpdated:\r\n      return{\r\n        ...state,\r\n        events: state.events.map(\r\n          e => (e.id === action.payload.id) ? action.payload : e\r\n        )\r\n      }\r\n\r\n      case types.eventDeleted:\r\n        return{\r\n          ...state,\r\n          events: state.events.filter(\r\n            e => (e.id !== state.activeEvent.id)\r\n          ),\r\n          activeEvent: null\r\n        }\r\n\r\n      case types.eventLoaded:\r\n        return{\r\n          ...state,\r\n          events: [...action.payload] // --> esparce todos los nuevos eventos\r\n\r\n        }\r\n      \r\n        case types.eventLogout:\r\n          return {\r\n            ...initialState\r\n          }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { authReducer } from './authReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store ={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default CalendarApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CalendarApp from \"./CalendarApp\";\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}